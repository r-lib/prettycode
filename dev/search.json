[{"path":[]},{"path":"https://r-lib.github.io/prettycode/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://r-lib.github.io/prettycode/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://r-lib.github.io/prettycode/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 prettycode authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gábor Csárdi. Author, maintainer. Posit Software, PBC. Copyright holder, funder.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Csárdi G (2023). prettycode: Pretty Print R Code Terminal. R package version 1.1.0.9000,  https://r-lib.github.io/prettycode/, https://github.com/r-lib/prettycode#readme.","code":"@Manual{,   title = {prettycode: Pretty Print R Code in the Terminal},   author = {Gábor Csárdi},   year = {2023},   note = {R package version 1.1.0.9000,  https://r-lib.github.io/prettycode/},   url = {https://github.com/r-lib/prettycode#readme}, }"},{"path":"https://r-lib.github.io/prettycode/dev/index.html","id":"prettycode","dir":"","previous_headings":"","what":"Pretty Print R Code in the Terminal","title":"Pretty Print R Code in the Terminal","text":"Pretty Print R Code Terminal Replace standard print method functions one performs syntax highlighting, using ANSI colors, terminal supports .","code":""},{"path":"https://r-lib.github.io/prettycode/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Pretty Print R Code in the Terminal","text":"Stable version: Development version:","code":"install.packages(\"prettycode\") pak::pak(\"r-lib/prettycode\")"},{"path":"https://r-lib.github.io/prettycode/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Pretty Print R Code in the Terminal","text":"Just call prettycode::prettycode() start printing functions screen. Long functions automatically paged using default pager.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/index.html","id":"options","dir":"","previous_headings":"Usage","what":"Options","title":"Pretty Print R Code in the Terminal","text":"prettycode.should_page controls paging. Use FALSE disable paging long functions.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Pretty Print R Code in the Terminal","text":"MIT © Gábor Csárdi","code":""},{"path":"https://r-lib.github.io/prettycode/dev/reference/color_brackets.html","id":null,"dir":"Reference","previous_headings":"","what":"Colored brackets — color_brackets","title":"Colored brackets — color_brackets","text":"Add color brackets. Brackets coloured consecutively colors provided color_seq scope.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/reference/color_brackets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colored brackets — color_brackets","text":"","code":"color_brackets(x, color_seq = list(yellow, blue, cyan))"},{"path":"https://r-lib.github.io/prettycode/dev/reference/color_brackets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colored brackets — color_brackets","text":"x character vector brackets consisting valid sequence following: '[[', '[', ']', '(', ')', '{', '}' color_seq list functions take return character scalar. ordering defines sequence color functions apply given scope level. Color functions recycled scope level exceeds length color_seq","code":""},{"path":"https://r-lib.github.io/prettycode/dev/reference/color_brackets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Colored brackets — color_brackets","text":"Meant coloring brackets encountered within highlight. Note occurrences 'orphan' brackets taken account mainly due fact cases foo <- function(x){ `[[`(x, 1) } either converted foo <- function(x){ x[[1]] } brackets coloured passed highlight(deparse(foo)) identified 'SYMBOL_FUNCTION_CALL' token instead 'LBB' passed highlight(\"foo <- function(x){ `[[`(x, 1) }\") Similarly, invalid code lead orphaned brackets taken account caught hand highlight.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/reference/default_style.html","id":null,"dir":"Reference","previous_headings":"","what":"Default prettycode syntax highlighting style — default_style","title":"Default prettycode syntax highlighting style — default_style","text":"style function must return named list functions. Possible entries: reserved: reserved words number: numeric literals null: NULL constant operator: operators, including assignment call: function calls string: character literals comment: comments bracket: brackets: (){}[]","code":""},{"path":"https://r-lib.github.io/prettycode/dev/reference/default_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default prettycode syntax highlighting style — default_style","text":"","code":"default_style()"},{"path":"https://r-lib.github.io/prettycode/dev/reference/default_style.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default prettycode syntax highlighting style — default_style","text":"entry list must function takes character scalar, returns character scalar exception bracket list type functions defining color sequence. default style adds ANSI formatting code. Note can also change code like, e.g. include unicode arrow character instead two-character assignment operator.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/reference/default_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default prettycode syntax highlighting style — default_style","text":"","code":"highlight(deparse(get), style = default_style()) #> [1] \"\\033[31mfunction\\033[39m \\033[33m(\\033[39mx, pos = \\033[32m-\\033[39m\\033[34m1L\\033[39m, envir = \\033[36mas.environment\\033[39m\\033[34m(\\033[39mpos\\033[34m)\\033[39m, mode = \\033[33m\\\"any\\\"\\033[39m, \" #> [2] \"    inherits = \\033[34mTRUE\\033[39m\\033[33m)\\033[39m \"                                                                                                                                                 #> [3] \"\\033[36m.Internal\\033[39m\\033[33m(\\033[39m\\033[36mget\\033[39m\\033[34m(\\033[39mx, envir, mode, inherits\\033[34m)\\033[39m\\033[33m)\\033[39m\""},{"path":"https://r-lib.github.io/prettycode/dev/reference/highlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Syntax highlight R code — highlight","title":"Syntax highlight R code — highlight","text":"Syntax highlight R code","code":""},{"path":"https://r-lib.github.io/prettycode/dev/reference/highlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Syntax highlight R code — highlight","text":"","code":"highlight(code, style = default_style())"},{"path":"https://r-lib.github.io/prettycode/dev/reference/highlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Syntax highlight R code — highlight","text":"code Character vector, element one line code. style Style functions, see default_style().","code":""},{"path":"https://r-lib.github.io/prettycode/dev/reference/highlight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Syntax highlight R code — highlight","text":"Character vector, highlighted code.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/reference/highlight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Syntax highlight R code — highlight","text":"","code":"highlight(deparse(ls)) #>  [1] \"\\033[31mfunction\\033[39m \\033[33m(\\033[39mname, pos = \\033[32m-\\033[39m\\033[34m1L\\033[39m, envir = \\033[36mas.environment\\033[39m\\033[34m(\\033[39mpos\\033[34m)\\033[39m, all.names = \\033[34mFALSE\\033[39m, \"                                                                                        #>  [2] \"    pattern, sorted = \\033[34mTRUE\\033[39m\\033[33m)\\033[39m \"                                                                                                                                                                                                                                       #>  [3] \"\\033[33m{\\033[39m\"                                                                                                                                                                                                                                                                                  #>  [4] \"    \\033[31mif\\033[39m \\033[34m(\\033[39m\\033[32m!\\033[39m\\033[36mmissing\\033[39m\\033[36m(\\033[39mname\\033[36m)\\033[39m\\033[34m)\\033[39m \\033[34m{\\033[39m\"                                                                                                                                          #>  [5] \"        pos \\033[32m<-\\033[39m \\033[36mtryCatch\\033[39m\\033[36m(\\033[39mname, error = \\033[31mfunction\\033[39m\\033[33m(\\033[39me\\033[33m)\\033[39m e\\033[36m)\\033[39m\"                                                                                                                               #>  [6] \"        \\033[31mif\\033[39m \\033[36m(\\033[39m\\033[36minherits\\033[39m\\033[33m(\\033[39mpos, \\033[33m\\\"error\\\"\\033[39m\\033[33m)\\033[39m\\033[36m)\\033[39m \\033[36m{\\033[39m\"                                                                                                                            #>  [7] \"            name \\033[32m<-\\033[39m \\033[36msubstitute\\033[39m\\033[33m(\\033[39mname\\033[33m)\\033[39m\"                                                                                                                                                                                               #>  [8] \"            \\033[31mif\\033[39m \\033[33m(\\033[39m\\033[32m!\\033[39m\\033[36mis.character\\033[39m\\033[34m(\\033[39mname\\033[34m)\\033[39m\\033[33m)\\033[39m \"                                                                                                                                              #>  [9] \"                name \\033[32m<-\\033[39m \\033[36mdeparse\\033[39m\\033[33m(\\033[39mname\\033[33m)\\033[39m\"                                                                                                                                                                                              #> [10] \"            \\033[36mwarning\\033[39m\\033[33m(\\033[39m\\033[36mgettextf\\033[39m\\033[34m(\\033[39m\\033[33m\\\"%s converted to character string\\\"\\033[39m, \"                                                                                                                                                #> [11] \"                \\033[36msQuote\\033[39m\\033[36m(\\033[39mname\\033[36m)\\033[39m\\033[34m)\\033[39m, domain = \\033[34mNA\\033[39m\\033[33m)\\033[39m\"                                                                                                                                                        #> [12] \"            pos \\033[32m<-\\033[39m name\"                                                                                                                                                                                                                                                            #> [13] \"        \\033[36m}\\033[39m\"                                                                                                                                                                                                                                                                          #> [14] \"    \\033[34m}\\033[39m\"                                                                                                                                                                                                                                                                              #> [15] \"    all.names \\033[32m<-\\033[39m \\033[36m.Internal\\033[39m\\033[34m(\\033[39m\\033[36mls\\033[39m\\033[36m(\\033[39menvir, all.names, sorted\\033[36m)\\033[39m\\033[34m)\\033[39m\"                                                                                                                           #> [16] \"    \\033[31mif\\033[39m \\033[34m(\\033[39m\\033[32m!\\033[39m\\033[36mmissing\\033[39m\\033[36m(\\033[39mpattern\\033[36m)\\033[39m\\033[34m)\\033[39m \\033[34m{\\033[39m\"                                                                                                                                       #> [17] \"        \\033[31mif\\033[39m \\033[36m(\\033[39m\\033[33m(\\033[39mll \\033[32m<-\\033[39m \\033[36mlength\\033[39m\\033[34m(\\033[39m\\033[36mgrep\\033[39m\\033[36m(\\033[39m\\033[33m\\\"[\\\"\\033[39m, pattern, fixed = \\033[34mTRUE\\033[39m\\033[36m)\\033[39m\\033[34m)\\033[39m\\033[33m)\\033[39m \\033[32m&&\\033[39m \" #> [18] \"            ll != \\033[36mlength\\033[39m\\033[33m(\\033[39m\\033[36mgrep\\033[39m\\033[34m(\\033[39m\\033[33m\\\"]\\\"\\033[39m, pattern, fixed = \\033[34mTRUE\\033[39m\\033[34m)\\033[39m\\033[33m)\\033[39m\\033[36m)\\033[39m \\033[36m{\\033[39m\"                                                                    #> [19] \"            \\033[31mif\\033[39m \\033[33m(\\033[39mpattern \\033[32m==\\033[39m \\033[33m\\\"[\\\"\\033[39m\\033[33m)\\033[39m \\033[33m{\\033[39m\"                                                                                                                                                                #> [20] \"                pattern \\033[32m<-\\033[39m \\033[33m\\\"\\\\\\\\[\\\"\\033[39m\"                                                                                                                                                                                                                               #> [21] \"                \\033[36mwarning\\033[39m\\033[34m(\\033[39m\\033[33m\\\"replaced regular expression pattern '[' by  '\\\\\\\\\\\\\\\\['\\\"\\033[39m\\033[34m)\\033[39m\"                                                                                                                                               #> [22] \"            \\033[33m}\\033[39m\"                                                                                                                                                                                                                                                                      #> [23] \"            \\033[31melse\\033[39m \\033[31mif\\033[39m \\033[33m(\\033[39m\\033[36mlength\\033[39m\\033[34m(\\033[39m\\033[36mgrep\\033[39m\\033[36m(\\033[39m\\033[33m\\\"[^\\\\\\\\\\\\\\\\]\\\\\\\\[<-\\\"\\033[39m, pattern\\033[36m)\\033[39m\\033[34m)\\033[39m\\033[33m)\\033[39m \\033[33m{\\033[39m\"                              #> [24] \"                pattern \\033[32m<-\\033[39m \\033[36msub\\033[39m\\033[34m(\\033[39m\\033[33m\\\"\\\\\\\\[<-\\\"\\033[39m, \\033[33m\\\"\\\\\\\\\\\\\\\\\\\\\\\\[<-\\\"\\033[39m, pattern\\033[34m)\\033[39m\"                                                                                                                          #> [25] \"                \\033[36mwarning\\033[39m\\033[34m(\\033[39m\\033[33m\\\"replaced '[<-' by '\\\\\\\\\\\\\\\\[<-' in regular expression pattern\\\"\\033[39m\\033[34m)\\033[39m\"                                                                                                                                         #> [26] \"            \\033[33m}\\033[39m\"                                                                                                                                                                                                                                                                      #> [27] \"        \\033[36m}\\033[39m\"                                                                                                                                                                                                                                                                          #> [28] \"        \\033[36mgrep\\033[39m\\033[36m(\\033[39mpattern, all.names, value = \\033[34mTRUE\\033[39m\\033[36m)\\033[39m\"                                                                                                                                                                                     #> [29] \"    \\033[34m}\\033[39m\"                                                                                                                                                                                                                                                                              #> [30] \"    \\033[31melse\\033[39m all.names\"                                                                                                                                                                                                                                                                 #> [31] \"\\033[33m}\\033[39m\"                                                                                                                                                                                                                                                                                  cat(highlight(deparse(ls)), sep = \"\\n\") #> function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,  #>     pattern, sorted = TRUE)  #> { #>     if (!missing(name)) { #>         pos <- tryCatch(name, error = function(e) e) #>         if (inherits(pos, \"error\")) { #>             name <- substitute(name) #>             if (!is.character(name))  #>                 name <- deparse(name) #>             warning(gettextf(\"%s converted to character string\",  #>                 sQuote(name)), domain = NA) #>             pos <- name #>         } #>     } #>     all.names <- .Internal(ls(envir, all.names, sorted)) #>     if (!missing(pattern)) { #>         if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) &&  #>             ll != length(grep(\"]\", pattern, fixed = TRUE))) { #>             if (pattern == \"[\") { #>                 pattern <- \"\\\\[\" #>                 warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\") #>             } #>             else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) { #>                 pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern) #>                 warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\") #>             } #>         } #>         grep(pattern, all.names, value = TRUE) #>     } #>     else all.names #> }"},{"path":"https://r-lib.github.io/prettycode/dev/reference/prettycode-package.html","id":null,"dir":"Reference","previous_headings":"","what":"prettycode: Pretty Print R Code in the Terminal — prettycode-package","title":"prettycode: Pretty Print R Code in the Terminal — prettycode-package","text":"Replace standard print method functions one performs syntax highlighting, using ANSI colors, terminal supports .","code":""},{"path":[]},{"path":"https://r-lib.github.io/prettycode/dev/reference/prettycode-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"prettycode: Pretty Print R Code in the Terminal — prettycode-package","text":"Maintainer: Gábor Csárdi csardi.gabor@gmail.com contributors: Posit Software, PBC [copyright holder, funder]","code":""},{"path":"https://r-lib.github.io/prettycode/dev/reference/prettycode.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretty Print R Code in the Terminal — prettycode","title":"Pretty Print R Code in the Terminal — prettycode","text":"Replace standard print method functions one performs syntax highlighting, using ANSI colors, terminal supports .","code":""},{"path":"https://r-lib.github.io/prettycode/dev/reference/prettycode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretty Print R Code in the Terminal — prettycode","text":"","code":"prettycode(warn_conflicts = TRUE)"},{"path":"https://r-lib.github.io/prettycode/dev/reference/prettycode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pretty Print R Code in the Terminal — prettycode","text":"warn_conflicts logical. TRUE, warnings printed conflicts replacing standard print method.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/reference/print.function.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a function with syntax highlighting — print.function","title":"Print a function with syntax highlighting — print.function","text":"turn pretty printing functions, need call prettycode::prettycode(). might good idea call .Rprofile.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/reference/print.function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a function with syntax highlighting — print.function","text":"","code":"# S3 method for `function` print(x, useSource = TRUE, style = default_style(), ...)"},{"path":"https://r-lib.github.io/prettycode/dev/reference/print.function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a function with syntax highlighting — print.function","text":"x Function print. useSource Whether use stored source code, available. style highlight style use, see default_style(). ... used currently, compatibility print generic.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/reference/print.function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a function with syntax highlighting — print.function","text":"function, invisibly.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/news/index.html","id":"prettycode-110","dir":"Changelog","previous_headings":"","what":"prettycode 1.1.0","title":"prettycode 1.1.0","text":"CRAN release: 2019-12-16 Use colors current theme RStudio. Color matching brackets help distinguish scopes (#8, @mdequeljoe). withr package now development dependency, needed regular use.","code":""},{"path":"https://r-lib.github.io/prettycode/dev/news/index.html","id":"prettycode-102","dir":"Changelog","previous_headings":"","what":"prettycode 1.0.2","title":"prettycode 1.0.2","text":"CRAN release: 2018-09-11 Add prettycode::prettycode(). Call function turn pretty-printing function objects. needed work around new S3 method search limits R 3.5.x. prettycode fails highlight function, falls back base::print.function() now (#3).","code":""},{"path":"https://r-lib.github.io/prettycode/dev/news/index.html","id":"prettycode-101","dir":"Changelog","previous_headings":"","what":"prettycode 1.0.1","title":"prettycode 1.0.1","text":"CRAN release: 2017-12-12 Avoid registering print.function S3 method. needed avoid new R CMD check check","code":""},{"path":"https://r-lib.github.io/prettycode/dev/news/index.html","id":"prettycode-100","dir":"Changelog","previous_headings":"","what":"prettycode 1.0.0","title":"prettycode 1.0.0","text":"CRAN release: 2017-01-27 First public release.","code":""}]
